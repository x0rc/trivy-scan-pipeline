name: Trvivy Vulnerability Scanner for Docker Images
description: This Github Actions performs static vulnerability scanning of docker images and brings back the results to the Slack/Pull-Request
author: devops@ebot7

inputs:
  IMAGE:
    required: true
    description: 'name of image built'   
  NOTIFICATION_TYPES:
    required: false
    description: 'comma separated list notification types (slack, pull_request)'
  SLACK_WEBHOOK:
    required: false
    description: 'slack webhook url for notifications (required only if NOTIFICATION_TYPES contains slack)'
  GITHUB_ACCESS_TOKEN:
    required: false
    description: 'github Access token to update the PR (required only if "NOTIFICATION_TYPES" contains pull-request)'
  SLACK_WEBHOOK_URL:
    required: false
    description: 'slack webhook url'  

runs:
  using: "composite"
  steps:

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Prerequisite Variables
      run: ${{ github.action_path }}/scripts/prerequisite.sh
      shell: bash
      env:
        DOCKER_IMAGE_TO_SCAN: ${{ inputs.IMAGE }}
        GITHUB_SERVER_URL: ${{ github.server_url }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_RUN_ID: ${{ github.run_id }}  
        IMAGE: ${{ inputs.IMAGE }}             

    - name: Setting Up Pull-Request Body
      if: contains(inputs.NOTIFICATION_TYPES, 'pull_request')
      run: ${{ github.action_path }}/scripts/pull-request.sh
      shell: bash
      env:
        GITHUB_ACTION_URL: ${{ env.GITHUB_ACTION_URL }}
        test_result_emoji: ${{ env.TEST_RESULT_EMOJI }}
        critical_emoji: ${{ env.CRITICAL_EMOJI }}
        critical2: ${{ env.CRITICAL_NUMBER_OF_VULNERABILITIES }}
        high_emoji: ${{ env.HIGH_EMOJI }}
        high2: ${{ env.HIGH_NUMBER_OF_VULNERABILITIES }}
        IMAGE: ${{ inputs.IMAGE }}

    - name: Update the Pull-Request Body
      if: contains(inputs.NOTIFICATION_TYPES, 'pull_request')
      uses: tzkhan/pr-update-action@v2
      with:
        repo-token: "${{ inputs.GITHUB_ACCESS_TOKEN }}"
        base-branch-regex: '[a-z\d-_.\\/]+'
        body-template: |           
          ${{ env.SUMMARY_OF_THE_SCAN }}
        body-update-action: 'suffix'
        body-uppercase-base-match: false

    - name: Send Slack Notification
      id: slack
      uses: slackapi/slack-github-action@v1.19.0
      if: contains(inputs.NOTIFICATION_TYPES, 'slack')
      with:
        payload: |
          {
              "attachments": [
                  {
                      "color": "${{ env.SLACK_ATTACHMENT_BAR_COLOR }}",
                      "blocks": [
                          {
                              "type": "header",
                              "text": {
                                  "type": "plain_text",
                                  "text": "${{ env.TEST_RESULT_EMOJI }} ${{ env.SUMMARY_REPORT_MSG }}\n :whale: - ${{ inputs.IMAGE }}",
                                  "emoji": true
                              }
                          },                               
                          {
                              "type": "header",
                              "text": {
                                  "type": "plain_text",
                                  "text": "Trivy Scan Summary",
                                  "emoji": true
                              }
                          },   
                          {
                            "type": "divider"
                          },                                     
                          {
                              "type": "section",
                              "fields": [
                                  {
                                      "type": "mrkdwn",
                                      "text": "```Severity```"
                                  },
                                  {
                                      "type": "mrkdwn",
                                      "text": "```Vulnerability Count```"
                                  },
                                  {
                                      "type": "mrkdwn",
                                      "text": "${{ env.CRITICAL_EMOJI }} Critical"
                                  },
                                  {
                                      "type": "mrkdwn",
                                      "text": "${{ env.CRITICAL_NUMBER_OF_VULNERABILITIES }}"
                                  },
                                  {
                                      "type": "mrkdwn",
                                      "text": "${{ env.HIGH_EMOJI }} High"
                                  },
                                  {
                                      "type": "mrkdwn",
                                      "text": "${{ env.HIGH_NUMBER_OF_VULNERABILITIES }}"
                                  }
                              ]
                          },
                          {
                              "type": "section",
                              "text": {
                                  "type": "mrkdwn",
                                  "text": ":memo: See the Full Scanning Report"
                              },
                              "accessory": {
                                  "type": "button",
                                  "text": {
                                      "type": "plain_text",
                                      "text": "View Report",
                                      "emoji": true
                                  },
                                  "value": "report",
                                  "url": "${{ env.GITHUB_ACTION_URL }}",
                                  "action_id": "button-action"
                              }
                          }
                      ]
                  }
              ]
          }                            
      env:
        SLACK_WEBHOOK_URL: ${{ inputs.SLACK_WEBHOOK_URL }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK    

    - name: Full Report
      run: ${{ github.action_path }}/scripts/prerequisite.sh
      shell: bash
      env:
        DOCKER_IMAGE_TO_SCAN: ${{ inputs.IMAGE }}
        FULL_REPORT: "TRUE"